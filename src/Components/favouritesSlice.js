// Import createSlice from Redux Toolkit to simplify creating a Redux slice
import { createSlice } from "@reduxjs/toolkit";

// Define the initial state for the favourites slice
const initialState = {
  // Initialize favouriteItems from localStorage if it exists, otherwise start with an empty array
  favouriteItems: localStorage.getItem("favouriteItems")
    ? JSON.parse(localStorage.getItem("favouriteItems")) // Parse the stored JSON string into an array
    : [], // Default to an empty array if nothing is in localStorage
};

// Create a Redux slice for managing the favourites list
const favouriteSlice = createSlice({
  name: "favouritelist", // Name of the slice, used in action types (e.g., favouritelist/addTofavouritelists)
  initialState, // Use the initialState defined above
  reducers: { // Define the reducer functions to handle state changes
    // Reducer to add a recipe to the favourites list
    addTofavouritelists: (state, action) => {
      // Check if the recipe (action.payload) already exists in the favouriteItems array
      const exists = state.favouriteItems.find((item) => item.id === action.payload.id);
      if (!exists) { // Only add if it doesnâ€™t already exist to avoid duplicates
        state.favouriteItems.push(action.payload); // Add the new recipe to the array
        // Save the updated favouriteItems array to localStorage as a JSON string
        localStorage.setItem("favouriteItems", JSON.stringify(state.favouriteItems));
      }
    },
    // Reducer to remove a recipe from the favourites list
    removeFavouriteItem: (state, action) => {
      // Filter out the recipe with the matching ID (action.payload) from favouriteItems
      state.favouriteItems = state.favouriteItems.filter((item) => item.id !== action.payload);
      // Update localStorage with the new favouriteItems array as a JSON string
      localStorage.setItem("favouriteItems", JSON.stringify(state.favouriteItems));
    },
    // Reducer to clear all items from the favourites list
    clearAllFavouritelist: (state) => {
      state.favouriteItems = []; // Reset favouriteItems to an empty array
      // Remove the favouriteItems key from localStorage entirely
      localStorage.removeItem("favouriteItems");
    },
  },
});

// Export the action creators generated by createSlice for use in components
export const { addTofavouritelists, removeFavouriteItem, clearAllFavouritelist } = favouriteSlice.actions;
// Export the reducer function to be included in the Redux store
export default favouriteSlice.reducer;